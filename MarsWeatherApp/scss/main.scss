*,
*::before,
*::after {
    box-sizing: border-box;
}

:root {
    --fw-light: 300;
    --fw-normal: 400;
    --fw-semi: 500;
    --fw-bold: 700;
    --fs-h1: 1.5rem;
    --fs-h2: 2.25rem;
    --fs-body: 1rem;
    --fs-xl: 4.5rem;
    --clr-light: #fff;
    --clr-gray: #989898;
    --clr-dark: #444;
    --clr-accent: #D06D6D;
    --clr-accent-dark: #613131;
}

.sr-only:not(:focus):not(:active) {
    clip: rect(0 0 0 0);
    clip-path: inset(50%);
    height: 1px;
    overflow: hidden;
    position: absolute;
    white-space: nowrap;
    width: 1px;
}

body {
    margin: 0;
    font-family: 'Montserrat', sans-serif;
    line-height: 1.6;
    background-image: url(https://mars.nasa.gov/system/resources/detail_files/7438_mars-curiosity-rover-msl-horizon-sky-self-portrait-PIA19808-full_1200.jpg);
    background-size: cover;
    height: 100vh;
    overflow: hidden;
    color: var(--clr-light);
}

h1,
h2,
h3 {
    line-height: 1;
}

a {
    color: var(--clr-accent);

    &:hover {
        color: var(--clr-accent-dark);
    }
}

.main-title {
    font-size: var(--fs-h1);
    font-weight: var(--fw-light);
    text-transform: uppercase;
    color: var(--clr-accent);
    letter-spacing: 2px;

    grid-column: 1/-1;
}

.section-title {
    font-size: var(--fs-h2);
    font-weight: var(--fw-bold);
    margin: 0;
}

.section-title--date {
    font-size: var(--fs-xl);
}

.reading {
    font-size: var(--fs-h1);
    margin: 0;
    color: var(--clr-gray);
}

.mars-current-weather {
    background: rgba(0, 0, 0, .7);
    padding: 2em;
    max-width: 1000px;
    margin: 4em 0 0 4em;
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-gap: 2em;
}

.date {
    grid-column: 1/2;

    &__day {
        font-size: var(--fs-h2);
        margin: 0;
        color: var(--clr-gray);
        font-weight: var(--fw-light);
    }
}

.temp {

    // 像這邊的var設置在temp裡面所以並不能給外面使用
    --border: solid .25em var(--clr-accent-dark);
    grid-column: 2/3;
    border-left: var(--border);
    border-right: var(--border);
    padding: 0 2em;
}

.wind {
    grid-column: 3/4;
    display: grid;
    grid-template-columns: repeat(2, 1fr);

    // 這一步是為了讓Wind標題與風速之間的間距縮小讓行距大小跟內容一樣
    grid-template-rows: min-content 1fr;
    align-self: start;

    .section-title,
    .reading {
        grid-column: 2/3;
    }

    &__direction {
        --size: 6rem;
        width: var(--size);
        height: var(--size);
        background-color: rgba(255, 255, 255, .5);
        border-radius: 50%;
        // display: flex;
        // align-items: center;
        // justify-content: center;
        display: grid;
        place-items: center;
        grid-row: 1/span 2;
    }

    &__arrow {
        // update Custom Props in JS
        // to update the direction
        --direction: 0deg;
        --size: 1rem;
        height: calc(var(--size)*3);
        width: var(--size);
        background: var(--clr-accent-dark);
        clip-path: polygon(50% 0, 0% 100%, 100% 100%);
        transform: translateY(-50%) rotate(var(--direction));
        transform-origin: bottom center;
    }
}

.info {
    grid-column: 1/3;
}

.unit {
    grid-column: 3/4;

    // place-self是align-self and justify-self的縮寫
    // 使用end會把物件放到最右邊最下方
    place-self: end;
    color: var(--clr-light);
    display: flex;
    opacity: .7;
    transition: opacity 275ms linear;

    &:hover {
        opacity: 1;
    }

    label {
        cursor: pointer;
    }

    // 要隱藏input區域那個圓形checkbox
    // 一樣使用sr-only的屬性貼在這邊使用
    input {
        clip: rect(0 0 0 0);
        // 這個clip-path主要會把input的checkbox裁減掉
        clip-path: inset(50%);
        height: 1px;
        overflow: hidden;
        position: absolute;
        white-space: nowrap;
        width: 1px;
    }

    // 中間按鈕的部分修飾
    &__toggle {
        cursor: pointer;
        width: 4em;
        border: 2px solid var(--clr-light);
        background: transparent;
        padding: 0;
        // vmax = vh,vw的最大值
        border-radius: 100vmax;
        margin: 0 1em;

        // 中間圓點修飾
        &::after {
            content: '';
            display: block;
            background: var(--clr-light);
            border-radius: 50%;
            height: 1rem;
            margin: 3px;
            width: 1rem;
            // 左側自動填滿margin所以球會移動到最右邊
            margin-left: auto;
        }
    }

    // 偽類選擇器:checked只會使用在任何選中狀態下的radio(<input type="radio">)，checkbox (<input type="checkbox">) 或("select") 元素中的option HTML元素("option")。
    // 當選中checked時則底下的after修飾也就是圓點的部分會移動回左邊只有margin:3px的狀態
    :checked~.unit__toggle::after {
        margin-left: 3px;
    }
}

.previous-weather {
    background: var(--clr-light);
    color: var(--clr-dark);
    position: absolute;
    bottom: 0;
    width: 100%;

    // 把previous-weather欄位往下60%
    transform: translateY(60%);
    transition: transform 350ms ease;
    padding: 3em;
}

.show-previous-weather {
    cursor: pointer;
    position: absolute;
    background: var(--clr-light);
    left: 50%;
    width: 10rem;

    // 這邊因為在previous-weather上加入padding會使箭頭區域跑掉所以加上clac而外加上3rem來確保位置不會跑掉
    transform: translate(-50%, calc(-100% - 3rem));
    text-align: center;
    font-size: var(--fs-h2);
    line-height: 1;
    clip-path: polygon(50% 0, 0 100%, 100% 100%);
    color: var(--clr-gray);
    border: 0;
    font-family: inherit;

    &:hover,
    &:focus {
        color: var(--clr-dark);
    }

    span {
        display: block;
        transform: rotate(0);
        transition: transform 300ms ease;
    }
}

.previous-days {
    display: flex;
    justify-content: space-between;
}

.previous-weather__title {
    text-align: center;
}

.previous-day {
    opacity: 0;

    &>* {
        margin: 0;
    }

    &__date {
        font-size: .9rem;
        color: var(--clr-gray);
    }

    &__more-info {
        border: 0;
        border-radius: 100vmax;
        background: var(--clr-dark);
        color: var(--clr-light);
        text-transform: uppercase;
        padding: .3em 1em;
        cursor: pointer;
        margin-top: 1em;

        &:hover {
            background: var(--clr-gray)
        }
    }
}




.show-weather.previous-weather {
    transform: translateY(0);

    .show-previous-weather span {
        display: block;
        transform: rotate(180deg) translateY(-6px);
    }

    .previous-weather__title,
    .previous-day {
        opacity: 1;
        animation: slideUpIn 750ms forwards;
    }

    .previous-weather__title {
        text-align: left;
    }

    // 讓previous-day的資料有一個一個上來的特效
    $slidTime: 1 100ms,
    2 125ms,
    3 150ms,
    4 175ms,
    5 200ms,
    6 225ms,
    7 250ms;

    @each $slide in $slidTime {
        .previous-day:nth-child(#{nth($slide,1)}) {
            animation-delay: #{nth($slide,2)};
        }
    }
}

@keyframes slideUpIn {
    0% {
        opacity: 0;
        transform: translateY(50%);
    }

    100% {
        opacity: 1;
        transform: translateY(0%);
    }
}