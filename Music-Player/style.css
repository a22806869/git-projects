@import url("https://fonts.googleapis.com/css?family=Lato&display=swap");

/* 全域設定 */
* {
  box-sizing: border-box;
}

body {
  /* linear-gradient(位置,顏色1顏色2) 後面%數代表梯度(顏色漸變的層度) */
  background-image: linear-gradient(
    0deg,
    rgba(247, 247, 247, 1) 23.8%,
    rgba(252, 221, 221, 1) 92%
  );
  height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  font-family: "Lato", sans-serif;
  margin: 0;
}

.music-container {
  background-color: #fff;
  border-radius: 15px;
  box-shadow: 0 20px 20px rgba(252, 169, 169, 0.6);
  display: flex;
  padding: 20px 30px;
  position: relative;
  margin: 100px 0;
  /* z-index較大數值的元素會覆蓋其他的較小的數值的z-index */
  z-index: 10;
}

.img-container {
  position: relative;
  width: 110px;
}

/* 唱盤指針 使用CSS 偽元素做出子元素圓點當作指針*/
.img-container::after {
  content: "";
  background-color: #fff;
  border-radius: 50%;
  position: absolute;
  bottom: 100%;
  left: 50%;
  width: 10px;
  height: 10px;
  transform: translate(-50%, 50%);
}

.img-container img {
  border-radius: 50%;
  object-fit: cover;
  height: 110px;
  /* 使用inherit會繼承到他parent的width也就是img-container width:110 */
  width: inherit;
  position: absolute;
  bottom: 0;
  left: 0;

  /* 動畫設置縮寫: 動畫名稱:rotate 延續3s轉一整圈  線性的加速度 無限重複*/
  animation: rotate 3s linear infinite;

  /* 控制動畫的播放狀態其實也可以放進縮寫裡面 : 先設定暫停待會用JS開啟*/
  animation-play-state: paused;
}

/* 必須使用JS才會切換到這個play狀態 預設設定上面cover是不會跑的 */
.music-container.play .img-container img {
  animation-play-state: running;
}

/* animation裡面的動畫設定可以寫在這邊from到to是一整段動畫過程中使用的元素 */
@keyframes rotate {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

.navigation {
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1;
}

.action-btn {
  background-color: #fff;
  border: 0;
  color: #dfdbdf;
  font-size: 20px;
  cursor: pointer;
  padding: 10px;
  margin: 0 20px;
}

.action-btn.action-btn-big {
  color: #cdc2d0;
  font-size: 30px;
}

/* 當點擊取得焦點後移除邊框 */
.action-btn:focus {
  outline: 0;
}

/* 包含專輯名稱、進度條的跳出視窗 */
.music-info {
  background-color: rgba(255, 255, 255, 0.5);
  border-radius: 15px 15px 0 0;
  position: absolute;
  top: 0;
  left: 20px;
  /* 這邊calc是指100%的width減去40px寬度就是取得的width */
  width: calc(100% - 40px);
  padding: 10px 10px 10px 150px;
  opacity: 0;
  transform: translateY(0%);
  /* 使用transform特效時觸發transition 的修飾秒數以及加速度特效*/
  /* 這邊後半部的opacity是另外的不算在transition的縮寫裡面喔! */
  /* transition 後方的0.3s 以及ease-in修飾transform特效 */
  transition: transform 0.3s ease-in, opacity 0.3s ease-in;
  z-index: 0;
}

.music-container.play .music-info {
  opacity: 1;
  transform: translateY(-100%);
}

.music-info h4 {
  margin: 0;
}

.progress-container {
  background-color: #fff;
  border-radius: 5px;
  cursor: pointer;
  margin: 10px 0;
  height: 4px;
  width: 100%;
}

.progress {
  background-color: #fe8daa;
  border-radius: 5px;
  height: 100%;
  /* 這邊的width要用JS控制因為它是音樂進行的進度條 */
  width: 0%;
  transition: width 0.3s linear;
}
